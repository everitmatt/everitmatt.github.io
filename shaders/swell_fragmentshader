precision mediump float;
      const float filterPixelWidth = 1.4142135623730951;
      const vec4 blank = vec4(0.);
      const vec4 BLUE = vec4( 0.0, 0.5, 1.0, 1.0 );
      const vec4 TEAL = vec4( 0.0, 1.0, 1.0, 1.0);
      const vec4 GREEN = vec4( 0.0, 1.0, 0.0, 1.0 );
      const vec4 YELLOW = vec4( 1.0, 1.0, 0.0, 1.0);
      const vec4 RED = vec4( 1.0, 0.0, 0.0, 1.0 );
      uniform sampler2D texture;
      
      varying float vAlpha;
      varying float vSwell;

      float remap(float minval, float maxval, float curval){
        return (curval - minval)/(maxval - minval);
      }

      void main () {
        if(vAlpha < 0.1) discard;

        if(vSwell < 0.25){
          gl_FragColor = mix (BLUE,TEAL, remap(0.0,0.25, vSwell));
        } else if(vSwell < 0.5){
          gl_FragColor = mix (TEAL,GREEN, remap(0.25,0.5, vSwell));
        } else if(vSwell < 0.75){
          gl_FragColor = mix (GREEN,YELLOW, remap(0.5,0.75, vSwell));
        }
        else {
          gl_FragColor = mix (YELLOW,RED, remap(0.75,1.0, vSwell));
        }
        //gl_FragColor = vec4(color,1.0);
        gl_FragColor = gl_FragColor * texture2D( texture, gl_PointCoord )*vAlpha;
      }